
CREATE TABLE
    avion (
        NA INT PRIMARY KEY,
        nom VARCHAR(12),
        capacity INT,
        localite VARCHAR(10)
    );

CREATE TABLE
    pilote (
        NP INT PRIMARY KEY,
        nom VARCHAR(25),
        adresse VARCHAR(40)
    );

CREATE TABLE vol (
    NV VARCHAR(6),
    NP INT,
    NA INT,
    VD VARCHAR(10),
    VA VARCHAR(10),
    HD INT,
    HA INT,
    CONSTRAINT fnpk FOREIGN KEY (NP) REFERENCES pilote (NP),
    CONSTRAINT fkna FOREIGN KEY (NA) REFERENCES avion (NA),
    CONSTRAINT pkvol PRIMARY KEY (NV)
);

INSERT INTO avion
VALUES (100, 'AIRBUS', 300, 'aaaa'), (101, 'B737', 250, 'bbbb'), (102, 'B737', 220, 'cccc');

/*inseret les valeurs*/

SELECT * FROM avion;

/*afficher tous les avions*/

SELECT * FROM avion ORDER BY nom ASC;

/*afficher tous les avions par order croissant sur le nom*/

SELECT nom, capacity FROM avion;

/*afficher les noms et capacities des avions*/

SELECT DISTINCT localite FROM avion;

/*afficher les localités des avions sans redondance*/

SELECT * FROM avion WHERE localite = 'aaaa' OR localite = 'bbbb';

/*afficher les avions dans la localité aaaa ou bbbb*/


UPDATE avion SET capacity = 220 WHERE NA = 101;
/*modifier les capacités de l'avion num 101, la nouvelle capacit" est 200*/

UPDATE avion SET capacity = 250 WHERE NA = 101;
/*reset the old value*/


DELETE FROM avion WHERE capacity < 200;
/*suppremer les avions dans la capacitéest inferieura 200*/


SELECT MAX(capacity), MIN(capacity), AVG(capacity) FROM avion;
/*afficher max, min et moyenne des avions capacites*/

SELECT * FROM avion WHERE capacity IN (SELECT MIN(capacity) from avion);

/*afficher les donnes des avions dont ka capacité est la plus basse*/

SELECT * FROM avion WHERE capacity > (SELECT AVG(capacity) FROM avion);

/*afficher les donnees des avions dont la capacité est superieure a la capacité moyenne*/

/*sub_request notion*/

SELECT
...FROM...WHERE <exp> {=, <, >, >=, <=, <>} [ALL,ANY] SELECT...FROM...WHERE <exp> {}

SELECT
...FROM...WHERE <exp> [IN, NOT IN] (SELECT (same field as earlier) FROM...WHERE {} )

SELECT *
FROM veste
WHERE (veste.nv = porter.nv)
    and duree = 2
    and taille > any
select tailee
from veste
where couleur = 'rouge';
/*excercice 1 page 10 cour sql*/
SELECT *
FROM EMPRUNT
WHERE IN
SELECT ISBN
FROM LIVRE
WHERE
    Titre LIKE 'Base de Données'
    and éditeur LIKE 'Eyrolles';

SELECT * FROM EMPRUNT WHERE

SELECT *
FROM EMPRUNT
WHERE DateEMP > ALL
SELECT DateAB
FROM ABONNE, EMPRUNT
WHERE
    (ABONNE.NumAB = EMPRUNT.NumAB)
    and (ABONNE.NumAB = 10);

SELECT * FROM EMPRUNT WHERE DateEMp > ALL SELECT DateEmp FROM EMPRUNT WHERE NumAB = 10;

SELECT * FROM LIVRE WHERE ISBN IN SELECT ISBN FROM EMPRUNT 

/*left join / right join: the field mentioned in the [join side] will be always displayed, while the second can be nullable*/
/*with other variants of join, you can specify to set those keys as non-nullable 
refer to chapter 16 in the mysql goalkoicker book*/

/*(6)*/
SELECT * FROM empr FULL JOIN emprtr ON empr.idemprtr = emprtr.idemprtr;

